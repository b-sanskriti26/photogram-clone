{"version":3,"sources":["firebase.js","Post.js","ImageUpload.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","storage","Post","postId","user","username","caption","imageUrl","useState","comments","setComments","comment","setComment","useEffect","unsubscribe","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","className","Avatar","alt","src","text","type","placeholder","value","onChange","e","target","disabled","onClick","event","preventDefault","add","displayName","timestamp","FieldValue","serverTimestamp","ImageUpload","setCaption","progress","setProgress","image","setImage","max","files","Button","ref","name","put","on","Math","round","bytesTransferred","totalBytes","error","console","log","alert","message","child","getDownloadURL","then","url","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","App","classes","React","modalStyle","posts","setPosts","open","setOpen","openSignIn","setOpenSignIn","setUsername","password","setPassword","email","setEmail","setUser","onAuthStateChanged","authUser","updateProfile","id","post","Modal","onClose","style","Input","createUserWithEmailAndPassword","catch","signInWithEmailAndPassword","signOut","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bcf7f36b.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: 'AIzaSyBs8OFaQC5RM46U3J6w_ImX7HkYUnDVhjU',\r\n  authDomain: 'photogram-clone-6a940.firebaseapp.com',\r\n  projectId: 'photogram-clone-6a940',\r\n  storageBucket: 'photogram-clone-6a940.appspot.com',\r\n  messagingSenderId: '1030931120588',\r\n  appId: '1:1030931120588:web:56f2c5a6c1e596de451d69',\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst storage = firebase.storage();\r\n\r\nexport {firebase, db, auth, storage};\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Post.css';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { db, firebase } from './firebase';\r\n\r\nfunction Post({ postId, user, username, caption, imageUrl }) {\r\n  const [comments, setComments] = useState([]);\r\n  const [comment, setComment] = useState('');\r\n\r\n  useEffect(() => {\r\n    let unsubscribe;\r\n    if (postId) {\r\n      unsubscribe = db\r\n        .collection('posts')\r\n        .doc(postId)\r\n        .collection('comments')\r\n        .orderBy('timestamp', 'desc')\r\n        .onSnapshot((snapshot) => {\r\n          setComments(snapshot.docs.map((doc) => doc.data()));\r\n        });\r\n    }\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, [postId]);\r\n\r\n  const postComment = (event) => {\r\n    event.preventDefault();\r\n    db.collection('posts').doc(postId).collection('comments').add({\r\n      text: comment,\r\n      username: user.displayName,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n    setComment('');\r\n  };\r\n\r\n  return (\r\n    <div className='post'>\r\n      <div className='post__header'>\r\n        <Avatar\r\n          className='post__avatar'\r\n          alt='nature_geeks'\r\n          src='/static/images/avatar/1.jpg'\r\n        />\r\n\r\n        <h3>{username}</h3>\r\n      </div>\r\n      {/* header=>avatar + username */}\r\n\r\n      {/*image*/}\r\n      <img className='post__image' src={imageUrl} alt='still loading' />\r\n      {/*username + caption */}\r\n      <h4 className='post__text'>\r\n        <strong>{username}</strong> {caption}\r\n      </h4>\r\n\r\n      <div className='post__comments'>\r\n        {comments.map((comment) => (\r\n          <p>\r\n            <b>{comment.username}</b>\r\n            {comment.text}\r\n          </p>\r\n        ))}\r\n      </div>\r\n\r\n      {user && (\r\n        <form className='post__commentBox'>\r\n          <input\r\n            className='post__input'\r\n            type='text'\r\n            placeholder='Add a comment'\r\n            value={comment}\r\n            onChange={(e) => setComment(e.target.value)}\r\n          ></input>\r\n          <button\r\n            className='post__button'\r\n            disabled={!comment}\r\n            type='submit'\r\n            onClick={postComment}\r\n          >\r\n            Post\r\n          </button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import React, { useState } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { storage, db, firebase } from './firebase';\r\nimport './ImageUpload.css';\r\n\r\nfunction ImageUpload({ username }) {\r\n  const [caption, setCaption] = useState('');\r\n  const [progress, setProgress] = useState(0);\r\n  const [image, setImage] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      setImage(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleUpload = () => {\r\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n    uploadTask.on(\r\n      'state_changed',\r\n      (snapshot) => {\r\n        //progress function....\r\n        const progress = Math.round(\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n        );\r\n        setProgress(progress);\r\n      },\r\n      (error) => {\r\n        //Error function\r\n        console.log(error);\r\n        alert(error.message);\r\n      },\r\n      () => {\r\n        //complete function....\r\n        storage\r\n          .ref('images')\r\n          .child(image.name)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            //post image inside db\r\n            db.collection('posts').add({\r\n              timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n              caption: caption,\r\n              imageUrl: url,\r\n              username: username,\r\n            });\r\n            setProgress(0);\r\n            setCaption('');\r\n            setImage(null);\r\n          });\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className='imageupload'>\r\n      <progress className='imageupload__progress' value={progress} max='100' />\r\n      <input\r\n        type='text'\r\n        placeholder='Enter a Caption...'\r\n        onChange={(event) => setCaption(event.target.value)}\r\n        value={caption}\r\n      />\r\n      <input type='file' onChange={handleChange} />\r\n      <Button onClick={handleUpload}>Upload</Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageUpload;\r\n","import React, { useState, useEffect } from 'react';\nimport Post from './Post';\nimport './App.css';\nimport { db, auth } from './firebase';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport { Button, Container, Input } from '@material-ui/core';\nimport ImageUpload from './ImageUpload';\n\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [posts, setPosts] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [openSignIn, setOpenSignIn] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        //user has logged in\n        console.log(authUser);\n        setUser(authUser);\n\n        if (authUser.displayName) {\n          //don't use username\n        } else {\n          //if we created someone...\n          return authUser.updateProfile({\n            displayName: username,\n          });\n        }\n      } else {\n        //user has logged out\n        setUser(null);\n      }\n    });\n    return () => {\n      //perform some cleanup actions\n      unsubscribe();\n    };\n  }, [user, username]);\n\n  //useEffect => runs  a  piece of code based on specific condition\n  useEffect(() => {\n    //this is where code runs\n    db.collection('posts')\n      .orderBy('timestamp', 'desc')\n      .onSnapshot((snapshot) => {\n        //every time a new post added, the code fires\n\n        setPosts(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            post: doc.data(),\n          }))\n        );\n      });\n  }, []);\n\n  const signUp = (event) => {\n    event.preventDefault();\n\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((authUser) => {\n        authUser.user.updateProfile({\n          displayName: username,\n        });\n      })\n      .catch((error) => alert(error.message));\n\n    setOpen(false);\n  };\n\n  const signIn = (event) => {\n    event.preventDefault();\n\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .catch((error) => alert(error.message));\n\n    setOpenSignIn(false);\n  };\n\n  return (\n    <div className='App'>\n      <Modal open={open} onClose={() => setOpen(false)}>\n        <div style={modalStyle} className={classes.paper}>\n          <form className='app__signup'>\n            <center>\n              <img\n                className='app__headerImage'\n                src='photogram.png'\n                alt='failed to load'\n              ></img>\n            </center>\n            <Input\n              placeholder='username'\n              type='text'\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            ></Input>\n            <Input\n              placeholder='email'\n              type='text'\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Input>\n\n            <Input\n              placeholder='password'\n              type='password'\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Input>\n\n            <Button type='submit' onClick={signUp}>\n              Sign Up\n            </Button>\n          </form>\n        </div>\n      </Modal>\n\n      <Modal open={openSignIn} onClose={() => setOpenSignIn(false)}>\n        <div style={modalStyle} className={classes.paper}>\n          <form className='app__signup'>\n            <center>\n              <img\n                className='app__headerImage'\n                src='photogram.png'\n                alt='failed to load'\n              ></img>\n            </center>\n\n            <Input\n              placeholder='email'\n              type='text'\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Input>\n\n            <Input\n              placeholder='password'\n              type='password'\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Input>\n\n            <Button type='submit' onClick={signIn}>\n              Sign In\n            </Button>\n          </form>\n        </div>\n      </Modal>\n\n      <div className='app__header'>\n        <img\n          className='app__headerImage'\n          src='photogram.png'\n          alt='failed to load'\n        ></img>\n        {user ? (\n          <Button onClick={() => auth.signOut()}> Logout</Button>\n        ) : (\n          <div className='app__loginContainer'>\n            <Button onClick={() => setOpenSignIn(true)}>Sign In</Button>\n            <Button onClick={() => setOpen(true)}>Sign Up</Button>\n          </div>\n        )}\n      </div>\n\n      <div className='app__posts'>\n        <div className='app_postsLeft'>\n          {posts.map(({ id, post }) => (\n            <Post\n              key={id}\n              postId={id}\n              user={user}\n              username={post.username}\n              caption={post.caption}\n              imageUrl={post.imageUrl}\n            />\n          ))}\n        </div>\n\n        <div className='app_postsRight'>\n          <img className='app__postsImage' src='Photo6.jpeg' />\n          <h3 className='app_postsRightText'>Upload Pictures Now</h3>\n          <h6 className='app_postsRightText'>Click on Sign up</h6>\n        </div>\n      </div>\n\n      {user?.displayName ? (\n        <ImageUpload username={user.displayName} />\n      ) : (\n        <h3> Sorry you need to Login to upload</h3>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}